; Copyright (c) 2024, Intel Corporation
; SPDX-License-Identifier: BSD-3-Clause
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;
;  * Redistributions of source code must retain the above copyright notice,
;    this list of conditions and the following disclaimer.
;  * Redistributions in binary form must reproduce the above copyright notice,
;    this list of conditions and the following disclaimer in the documentation
;    and/or other materials provided with the distribution.
;  * Neither the name of Intel Corporation nor the names of its contributors
;    may be used to endorse or promote products derived from this software
;    without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.

; Test TRIG without instruction attribution.
;

org 0x1000
bits 64

; @pt p0: psb()
; @pt p1: mode.exec(64bit)
; @pt p2: psbend()

; @pt p3: trig(1)
; @pt p4: tip.pge(3: %l0)
; @pt p5: trig(2)
l0: jle l2
l1: hlt

; @pt p6: tnt(t)
; @pt p7: trig(3, mult)
l2: call rax
l3: hlt

; @pt p8: tip(2: %l4)
; @pt p9: trig(4)
; @pt p10: trig(5, mult)

; @pt p11:fup(3: %l4)
; @pt p12:tip.pgd(0: %l4)
l4: hlt

; @pt p13: trig(6)
; @pt p14: trig(7, mult)


; @pt .exp(ptdump)
;%0p0   psb
;%0p1   mode.exec  cs.l
;%0p2   psbend
;%0p3   trig       01
;%0p4   tip.pge    3: %?l0
;%0p5   trig       02
;%0p6   tnt.8      !
;%0p7   trig       03, mult
;%0p8   tip        2: %?l4.4
;%0p9   trig       04
;%0p10  trig       05, mult
;%0p11  fup        3: %?l4
;%0p12  tip.pgd    0: %?l4.0
;%0p13  trig       06
;%0p14  trig       07, mult


; @pt .exp(ptxed)
;[trig 01]
;[enabled]
;[trig 02]
;%0l0       # jle l2
;[trig 03, mult]
;%0l2       # call rax (l4)
;[trig 04]
;[trig 05, mult]
;[disabled]
;[trig 06]
;[trig 07, mult]
